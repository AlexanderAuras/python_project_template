[project]
name = "hello_world"
description = "A basic template for a python project"
readme = "README.md"
requires-python = "~=3.10"
authors = [ 
    {name = "Alexander Auras", email = "33501357+AlexanderAuras@users.noreply.github.com"}
]
maintainers = []
keywords = [ "template" ]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT No Attribution License (MIT-0)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Typing :: Typed"
]
dynamic = ["version", "dependencies"]

[project.optional-dependencies]
dev = [
    "bandit~=1.7.5",
    "black~=23.3.0",
    "defusedxml~=0.7.1",
    "pycodestyle~=2.10.0",
    "pydocstyle~=6.3.0",
    "pyright~=1.1.302",
    "pytest~=7.2.2",
    "pytest-cov~=4.0.0",
    "pytest-xdist~=3.2.1",
    "snakeviz~=2.1.1",
    "sphinx~=6.1.3",
    "toml~=0.10.2",
    "twine~=4.0.2"
]

[project.urls]
#homepage = <URL>
#documentation = <URL>
#repository = <URL>
#changelog = <URL>

[project.scripts]
#hello-world-script = "hello_world.<module>:<function>"

[build-system]
requires = [
    "setuptools~=67.6.0", 
    "setuptools-scm[toml]~=7.1.0"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}

[tool.setuptools_scm]

[tool.pyright]
venvPath = "./.venv"
exclude = [
    "**/node_modules",
    "*.py",
    "**/.pytest_cache",
    "**/.vscode",
    "**/__pycache__",
    "dist",
    "**/.egg-info",
    ".venv",
    "docs",
    ".badges"
]
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
analyzeUnannotatedFunctions = true
enableTypeIgnoreComments = true
strictDictionaryInference = true
strictListInference = true
strictParameterNoneValue = true
strictSetInference = true
reportDeprecated = "warning"
reportAssertAlwaysTrue = "warning"
reportCallInDefaultInitializer = "warning"
reportConstantRedefinition = "error"
reportDuplicateImport = "warning"
reportFunctionMemberAccess = "none"
reportGeneralTypeIssues = "error"
reportImplicitStringConcatenation = "warning"
reportImportCycles = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingImports = "warning"
reportMissingModuleSource = "information"
reportMissingParameterType = "error"
reportMissingSuperCall = "warning"
reportMissingTypeArgument = "error"
reportMissingTypeStubs = "information"
reportOptionalCall = "error"
reportOptionalContextManager = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportOverlappingOverload = "error"
reportPrivateImportUsage = "warning"
reportPrivateUsage = "warning"
reportPropertyTypeMismatch = "error"
reportSelfClsParameterName = "error"
reportShadowedImports = "warning"
reportTypeCommentUsage = "error"
reportTypedDictNotRequiredAccess = "error"
reportUnboundVariable = "error"
reportUndefinedVariable = "error"
reportUninitializedInstanceVariable = "error"
reportUnknownArgumentType = "information"
reportUnknownLambdaType = "information"
reportUnknownMemberType = "information"
reportUnknownParameterType = "information"
reportUnknownVariableType = "information"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "information"
reportUntypedClassDecorator = "information"
reportUntypedFunctionDecorator = "information"
reportUntypedNamedTuple = "information"
reportUnusedCallResult = "information"
reportUnusedClass = "information"
reportUnusedCoroutine = "information"
reportUnusedExpression = "warning"
reportUnusedFunction = "information"
reportUnusedImport = "information"
reportUnusedVariable = "warning"
reportWildcardImportFromLibrary = "error"

[tool.black]
line-length = 99999

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
line_length = 99999
lines_after_imports = 2

[tool.bandit]
exclude_dirs = ["tests"]

[tool.pytest.ini_options]
minversion = "7.2"
testpaths = "tests"
addopts = "-vv -n auto --cov=hello_world --cov-report term --cov-report lcov:lcov.info"
console_output_style = "count"
junit_duration_report = "call"
junit_logging = "all"
junit_family = "xunit2"
log_auto_indent = "On"
log_cli = true
log_cli_date_format = "%H:%M:%S"
log_cli_format = "%(asctime)s [%(levelname)s]: %(message)s"
log_cli_level = "INFO"
log_date_format = "%H:%M:%S"
log_format = "%(asctime)s [%(levelname)s]: %(message)s"
log_level = "INFO"
